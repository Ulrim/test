{"version":3,"sources":["Movie.js","App.js","index.js"],"names":["MoviePoster","_ref","poster","alt","react_default","a","createElement","src","title","className","MovieGenres","_ref2","genre","Movie","this","props","genres","map","index","key","lib_default","text","synopsis","maxLine","ellipsis","trimRight","basedOn","Component","App","state","_renderMovies","_this","movies","movie","console","log","src_Movie_0","id","medium_cover_image","_getMovies","_callee","regenerator_default","wrap","_context","prev","next","_callApi","sent","setState","stop","fetch","then","response","json","data","catch","err","ReactDOM","render","src_App_0","document","getElementById"],"mappings":"4SA0CA,SAASA,EAATC,GAAmC,IAAbC,EAAaD,EAAbC,OAAQC,EAAKF,EAALE,IAC1B,OACIC,EAAAC,EAAAC,cAAA,OAAKC,IAAKL,EAAQC,IAAKA,EAAKK,MAAOL,EAAKM,UAAU,iBAI1D,SAASC,EAATC,GAA8B,IAARC,EAAQD,EAARC,MAClB,OACIR,EAAAC,EAAAC,cAAA,QAAMG,UAAU,eAAeG,EAA/B,KAaOC,uLA/CP,OACIT,EAAAC,EAAAC,cAAA,OAAKG,UAAU,SACXL,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAACN,EAAD,CAAaE,OAAQY,KAAKC,MAAMb,OAAQC,IAAKW,KAAKC,MAAMP,SAE5DJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBACXL,EAAAC,EAAAC,cAAA,UAAKQ,KAAKC,MAAMP,OAChBJ,EAAAC,EAAAC,cAAA,OAAKG,UAAU,gBAEVK,KAAKC,MAAMC,OAAOC,IAAI,SAACL,EAAOM,GAAR,OAAkBd,EAAAC,EAAAC,cAACI,EAAD,CAAaE,MAAOA,EAAOO,IAAKD,OAE7Ed,EAAAC,EAAAC,cAAA,KAAGG,UAAU,kBACTL,EAAAC,EAAAC,cAACc,EAAAf,EAAD,CACIgB,KAAMP,KAAKC,MAAMO,SACjBC,QAAQ,IACRC,SAAS,MACTC,WAAS,EACTC,QAAQ,sBA3BhBC,aC8CLC,qNA7CbC,MAAQ,KAORC,cAAgB,WAWd,OAVeC,EAAKF,MAAMG,OAAOf,IAAI,SAAAgB,GAEnC,OADAC,QAAQC,IAAIF,GACL7B,EAAAC,EAAAC,cAAC8B,EAAD,CACLjB,IAAKc,EAAMI,GACX7B,MAAOyB,EAAMzB,MACbN,OAAQ+B,EAAMK,mBACdtB,OAAQiB,EAAMjB,OACdM,SAAUW,EAAMX,gBAMtBiB,gCAAc,SAAAC,IAAA,IAAAR,EAAA,OAAAS,EAAApC,EAAAqC,KAAA,SAAAC,GAAA,cAAAA,EAAAC,KAAAD,EAAAE,MAAA,cAAAF,EAAAE,KAAA,EACSd,EAAKe,WADd,OACNd,EADMW,EAAAI,KAEZhB,EAAKiB,SAAS,CACZhB,WAHU,wBAAAW,EAAAM,SAAAT,QAOdM,SAAW,WACT,OAAOI,MAAM,iEACZC,KAAK,SAAAC,GAAQ,OAAIA,EAASC,SAC1BF,KAAK,SAAAE,GAAI,OAAIA,EAAKC,KAAKtB,SACvBuB,MAAM,SAAAC,GAAG,OAAItB,QAAQC,IAAIqB,yFA5B1B1C,KAAKyB,8CA+BC,IACEP,EAAWlB,KAAKe,MAAhBG,OACR,OACE5B,EAAAC,EAAAC,cAAA,OAAKG,UAAWuB,EAAS,MAAQ,gBAC9BlB,KAAKe,MAAMG,OAASlB,KAAKgB,gBAAkB,kBA1ClCH,cCClB8B,IAASC,OAAOtD,EAAAC,EAAAC,cAACqD,EAAD,MAASC,SAASC,eAAe","file":"static/js/main.ef3d1c20.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport './Movie.css';\r\nimport { generateKeyPairSync } from 'crypto';\r\nimport LinesEllipsis from 'react-lines-ellipsis';\r\n\r\nclass Movie extends Component {\r\n\r\n    static propTypes = {\r\n        title: PropTypes.string.isRequired,\r\n        poster: PropTypes.string.isRequired,\r\n        genres: PropTypes.string.isRequired,\r\n        synopsis: PropTypes.string.isRequired\r\n    }\r\n\r\n    render(){\r\n        return(\r\n            <div className=\"Movie\">\r\n                <div className=\"Movie_Column\">\r\n                    <MoviePoster poster={this.props.poster} alt={this.props.title}/>\r\n                </div>\r\n                <div className=\"Movie_Column\">\r\n                    <h1>{this.props.title}</h1>\r\n                    <div className=\"Movie_Genres\">\r\n                        {/* genre은 배열로 값이 저장되있으므로 map을 통해 불러온다. */}\r\n                        {this.props.genres.map((genre, index) => <MovieGenres genre={genre} key={index} />)}\r\n                    </div>\r\n                    <p className=\"Movie_Synopsis\">\r\n                        <LinesEllipsis\r\n                            text={this.props.synopsis}\r\n                            maxLine='3'\r\n                            ellipsis='...'\r\n                            trimRight\r\n                            basedOn='letters'\r\n                        />\r\n                    </p>\r\n                </div>\r\n            </div>\r\n        );\r\n    }\r\n}\r\n\r\nfunction MoviePoster({poster, alt}){\r\n    return (\r\n        <img src={poster} alt={alt} title={alt} className=\"Movie_Poster\"/>\r\n    );\r\n}\r\n\r\nfunction MovieGenres({genre}) {\r\n    return (\r\n        <span className=\"Movie_Genre\">{genre} </span>\r\n    );\r\n}\r\n\r\nMoviePoster.propTypes = {\r\n    poster: PropTypes.string.isRequired,\r\n    alt: PropTypes.string.isRequired\r\n}\r\n\r\nMovieGenres.propTypes = {\r\n    genre: PropTypes.string.isRequired\r\n}\r\n\r\nexport default Movie;","import React, { Component } from 'react';\nimport Movie from './Movie'\nimport './App.css';\n\nclass App extends Component {\n  // Render: componentWillMount() -> render() -> componentDidMount()\n  // Update : componentWillReceiveProps() -> shouldComponentUpdate() -> componentWillUpdate() -> render() -> componentDidUpdate()\n  state = {\n\n  }\n  componentDidMount(){\n    this._getMovies();\n  }\n\n  _renderMovies = () => {\n    const movies = this.state.movies.map(movie => {\n      console.log(movie)\n      return <Movie \n        key={movie.id}\n        title={movie.title} \n        poster={movie.medium_cover_image} \n        genres={movie.genres}\n        synopsis={movie.synopsis}\n      />\n    })\n    return movies \n  }\n\n  _getMovies =  async () => {\n    const movies = await this._callApi()\n    this.setState({\n      movies\n    })\n  }\n\n  _callApi = () => {\n    return fetch('https://yts.am/api/v2/list_movies.json?sort_by=download count') //AJAX로 API 호출\n    .then(response => response.json()) // json을 보기좋게.. console.log에서 확인\n    .then(json => json.data.movies)\n    .catch(err => console.log(err))\n  }\n\n  render(){\n    const { movies } = this.state;\n    return(\n      <div className={movies ? \"App\" : \"App--loading\"}>\n        {this.state.movies ? this._renderMovies() : 'Loading'}\n      </div>\n    );\n  }\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}